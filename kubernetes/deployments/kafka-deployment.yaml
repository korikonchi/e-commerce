apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  serviceName: kafka
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: bitnami/kafka:latest
          ports:
            - containerPort: 9092 # Puerto base para el primer listener
            - containerPort: 9093 # Puerto para el segundo listener
            - containerPort: 9094 # Puerto para el tercer listener
          env:
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: 'zookeeper-0.zookeeper:2181,zookeeper-1.zookeeper:2181,zookeeper-2.zookeeper:2181'
            - name: ALLOW_PLAINTEXT_LISTENER
              value: 'yes'
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: 'PLAINTEXT_0://kafka-0.kafka:9092,PLAINTEXT_1://kafka-1.kafka:9093,PLAINTEXT_2://kafka-2.kafka:9094'
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: 'PLAINTEXT_0:PLAINTEXT,PLAINTEXT_1:PLAINTEXT,PLAINTEXT_2:PLAINTEXT'
            - name: KAFKA_CFG_LISTENERS
              value: 'PLAINTEXT_0://:9092,PLAINTEXT_1://:9093,PLAINTEXT_2://:9094'
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: 'PLAINTEXT_0' # Usar el primer listener para la comunicaci√≥n entre brokers
            - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
              value: 'true'
          resources:
            requests:
              cpu: '1000m'
              memory: '1024Mi'
            limits:
              cpu: '2000m'
              memory: '2048Mi'
