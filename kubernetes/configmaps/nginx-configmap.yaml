apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-reverse-proxy-config
  namespace: default
data:
  nginx.conf: |
    worker_processes 1;
    events {
      worker_connections 1024;
    }
    http {
      gzip on;
      gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

      proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=60m use_temp_path=off;

      limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;

      upstream app_backend {
        server backend-service:5000;
      }

      server {
        listen 80;
        server_name _;

        # Bloque para /app_backend/get-categories
        location /app_backend/get-categories {
          # Aplicar limitación de tasa de solicitudes
          limit_req zone=one burst=5;

          # Habilitar caché
          proxy_cache my_cache;
          proxy_cache_valid 200 302 10m;
          proxy_cache_valid 404 1m;

          # Reescribir la URL /app_backend/get-categories a /api/v1/categories
          rewrite ^/app_backend/get-categories$ /api/v1/categories break;

          # Configuración del proxy
          proxy_pass http://app_backend/;  # Nota la barra al final
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Bloquear el acceso directo a /app_backend/api/v1/categories
        location /app_backend/api/v1/categories {
          return 404;  # Devuelve un error 404
        }

        # Bloque para otras rutas bajo /app_backend
        location /app_backend/ {
          return 404;  # Devuelve un error 404 para cualquier otra ruta
        }
      }
    }
